#!/bin/bash

set -e

function run_selftest() {
  rm -rf .test
  mkdir -p .test/selftest

  cargo run -- --selftest --force .test/selftest
  .test/selftest/node_modules/.bin/tap .test/selftest/test.js
}

function run_startup() {
  rm -rf .test
  mkdir -p .test/startup

  cargo run -- .test/startup --force
  PORT=8080 .test/startup/boltzmann.js &
  pid=$!

  result=$(curl -sfL localhost:8080/hello/world)
  kill $pid

  if [ "$result" != "hello world" ]; then
    echo -e "expected \"hello world\", got \"$result\""
    exit 1
  fi
}

function run_examples() {
  for example in examples/*; do
    cd $example
    cargo run -- . --force
    if [ ! -z "$(git diff $example)" ]; then
      echo -e '\x1b[31m'"$example is no longer up-to-date"'\x1b[0m; consider running "npm run update" in the example dir and committing the results.'
    fi

    echo "testing $example startup"
    PORT=8080 $example/boltzmann.js &
    pid=$!
    kill $pid

    echo "testing $example startup"
    npm t # this may trigger docker-compose up

    if [ -e $example/docker-compose.yml ]; then
      docker-compose down || echo 'no docker detected'
    fi

    git checkout $example
    git clean -f $example
    cd -
  done
}

function list_tests() {
  typeset -f          | \
    grep '()'         | \
    grep 'run_*'      | \
    grep -v 'run_all' | \
    awk '{print $1}'  | \
    sed -e 's/run_//g'
}

function run_all() {
  for test in $(list_tests); do
    run_$test
  done
}

case $1 in
  "selftest")
    run_selftest
  ;;
  "startup")
    run_startup
  ;;
  "examples")
    run_examples
  ;;
  "list")
    list_tests
  ;;
  *)
    run_all
  ;;
esac
